package site.laoc;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

public class ImageUtils {
    public static void drawTextInImg(String filePath,String outPath) {
        ImageIcon imgIcon = new ImageIcon(filePath);
        Image img = imgIcon.getImage();
        int width = img.getWidth(null);
        int height = img.getHeight(null);
        BufferedImage bimage = new BufferedImage(width, height,
                BufferedImage.TYPE_INT_RGB);

        Graphics2D g = bimage.createGraphics();
        g.setColor(getColor("#ffffff"));
        g.setBackground(Color.white);
        g.drawImage(img, 0, 0, null);
        Font font = font = new Font("6", Font.BOLD,100);
        g.setFont(font);
        g.drawString("6", 89, 100);

        g.setColor(getColor("#1E3869"));
        font = font = new Font("Dec.2018", Font.BOLD,60);
        g.setFont(font);
        g.drawString("Dec.2018", 165, 100);

        g.setColor(getColor("#ffffff"));
        font = font = new Font("_", Font.BOLD,100);
        g.setFont(font);
        g.drawString("_", 89, 120);

        font = font = new Font("第一次打卡成功", Font.BOLD,80);
        g.setFont(font);
        g.drawString("第一次打卡成功", 89, 280);

        font = font = new Font("英语阅读10天", Font.BOLD,60);
        g.setFont(font);
        g.drawString("英语阅读10天", 89, 400);
        
        g.dispose();

        try {
            FileOutputStream out = new FileOutputStream(outPath);
            ImageIO.write(bimage, "PNG", out);
            out.close();
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    // color #2395439
    public static Color getColor(String color) {
        if (color.charAt(0) == '#') {
            color = color.substring(1);
        }
        if (color.length() != 6) {
            return null;
        }
        try {
            int r = Integer.parseInt(color.substring(0, 2), 16);
            int g = Integer.parseInt(color.substring(2, 4), 16);
            int b = Integer.parseInt(color.substring(4), 16);
            return new Color(r, g, b);
        } catch (NumberFormatException nfe) {
            return null;
        }
    }
}
